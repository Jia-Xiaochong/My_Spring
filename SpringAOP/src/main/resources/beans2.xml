<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd ">

    <!--
        使用AspectJ开发AOP：基于XML
     -->

    <!-- 目标类 -->
    <bean id="book" class="com.jiaxc.dao.Book">
        <property name="name" value="《计算机组成原理》" />
    </bean>

    <!-- 切面类 -->
    <bean id="logging" class="com.jiaxc.dao.Logging" />

    <aop:config>
        <!-- 声明一个切面 -->
        <aop:aspect id="log" ref="logging">
            <!-- 声明一个切入点<通知最后增强哪些方法> -->
            <aop:pointcut id="dao" expression="execution(* com.jiaxc.dao.Book.*(..))"/>
            <!-- 前置通知，关联通知 Advice 和切入点 PointCut -->
            <aop:before method="beforeAdvice" pointcut-ref="dao" />
            <!-- 后置通知，在方法返回之后执行，就可以获得返回值returning 属性 -->
            <aop:after-returning method="afterReturningAdvice" pointcut-ref="dao" returning="retVal"/>
            <!--环绕通知 -->
            <aop:around method="aroundAdvice" pointcut-ref="dao" />
            <!-- 抛出通知：用于处理程序发生异常，可以接收当前方法产生的异常 -->
            <!-- * 注意：如果程序没有异常，则不会执行增强 -->
            <!-- * throwing属性：用于设置通知参数的名称，类型Throwable -->
            <aop:after-throwing method="AfterThrowingAdvice" pointcut-ref="dao" throwing="ex" />
            <!-- 最终通知：无论程序发生任何事情，都将执行 -->
            <aop:after method="afterAdvice" pointcut-ref="dao" />
        </aop:aspect>
    </aop:config>

</beans>